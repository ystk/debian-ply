From 02030ad24d923f16f401744a608573365b2e5542 Mon Sep 17 00:00:00 2001
From: David Beazley <dave@dabeaz.com>
Date: Tue, 21 May 2013 20:14:04 -0500
Subject: [PATCH 1/3] Fixed yacc tests to account for dict hash key
 randomization

---
 test/testlex.py    |  3 +--
 test/testyacc.py   | 24 +++++++++++++++++++++---
 test/yacc_prec1.py |  4 ++--
 3 files changed, 24 insertions(+), 7 deletions(-)

diff --git a/test/testlex.py b/test/testlex.py
index 1f7dd1b..e436781 100755
--- a/test/testlex.py
+++ b/test/testlex.py
@@ -34,7 +34,7 @@ def pymodule_out_exists(filename):
 def pymodule_out_remove(filename):
     os.remove(make_pymodule_path(filename))
 
-def check_expected(result,expected):
+def check_expected(result, expected):
     if sys.version_info[0] >= 3:
         if isinstance(result,str):
             result = result.encode('ascii')
@@ -43,7 +43,6 @@ def check_expected(result,expected):
     resultlines = result.splitlines()
     expectedlines = expected.splitlines()
 
-
     if len(resultlines) != len(expectedlines):
         return False
 
diff --git a/test/testyacc.py b/test/testyacc.py
index 2b06b44..4462201 100644
--- a/test/testyacc.py
+++ b/test/testyacc.py
@@ -34,7 +34,7 @@ def pymodule_out_exists(filename):
 def pymodule_out_remove(filename):
     os.remove(make_pymodule_path(filename))
 
-
+# Old implementation (not safe for Python 3.3)
 def check_expected(result,expected):
     resultlines = []
     for line in result.splitlines():
@@ -52,6 +52,26 @@ def check_expected(result,expected):
             return False
     return True
 
+# Check the output to see if it contains all of a set of expected output lines.
+# This alternate implementation looks weird, but is needed to properly handle
+# some variations in error message order that occurs due to dict hash table
+# randomization that was introduced in Python 3.3
+def check_expected(result, expected):
+    resultlines = set()
+    for line in result.splitlines():
+        if line.startswith("WARNING: "):
+            line = line[9:]
+        elif line.startswith("ERROR: "):
+            line = line[7:]
+        resultlines.add(line)
+
+    # Selectively remove expected lines from the output
+    for eline in expected.splitlines():
+        resultlines = set(line for line in resultlines if not line.endswith(eline))
+
+    # Return True if no result lines remain
+    return not bool(resultlines)
+
 def run_import(module):
     code = "import "+module
     exec(code)
@@ -342,6 +362,4 @@ class YaccErrorWarningTests(unittest.TestCase):
                                     "Precedence rule 'left' defined for unknown symbol '/'\n"
                                     ))
 
-
-            
 unittest.main()
diff --git a/test/yacc_prec1.py b/test/yacc_prec1.py
index 2ca6afc..99fcd90 100644
--- a/test/yacc_prec1.py
+++ b/test/yacc_prec1.py
@@ -12,8 +12,8 @@ from calclex import tokens
 
 # Parsing rules
 precedence = (
-    ('left','+','-'),
-    ('left','*','/'),
+    ('left', '+', '-'),
+    ('left', '*', '/'),
     ('right','UMINUS'),
     )
 
-- 
1.8.5.2

