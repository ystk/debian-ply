Source: ply
Section: python
Priority: optional
Maintainer: Arnaud Fontaine <arnau@debian.org>
Uploaders: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>,
           Gustavo Franco <stratus@debian.org>
Build-Depends: debhelper (>= 5.0.37.2),
               cdbs (>= 0.4.90-1~),
               python-all (>= 2.6.6-9~),
               python3-all (>= 3.1.2-6~),
               perl
Build-Depends-Indep: python-setuptools,
                     python3-setuptools
X-Python-Version: >= 2.3
X-Python3-Version: >= 3.0
Standards-Version: 3.9.3
Homepage: http://www.dabeaz.com/ply/
Vcs-Svn: svn://svn.debian.org/python-modules/packages/ply/trunk/
Vcs-Browser: http://svn.debian.org/viewsvn/python-modules/packages/ply/trunk/

Package: python-ply
Architecture: all
Depends: ${python:Depends}, ${misc:Depends}
Provides: ${python:Provides}, ${python-ply:Provides}
Breaks: ${python:Breaks}
Suggests: python-ply-doc, python-pkg-resources
Description: Lex and Yacc implementation for Python2
 PLY   is   yet  another   implementation   of   lex   and  yacc   for
 Python.  Although  several  other  parsing tools  are  available  for
 Python, there are  several reasons why you might want  to take a look
 at PLY:
  * It's implemented entirely in Python.
  * It uses  LR-parsing which is reasonably efficient  and well suited
    for larger grammars.
  * PLY  provides most  of  the standard  lex/yacc features  including
    support for  empty productions, precedence  rules, error recovery,
    and support for ambiguous grammars.
  * PLY is  extremely easy  to use and  provides very  extensive error
    checking.

Package: python3-ply
Architecture: all
Depends: ${python3:Depends}, ${misc:Depends}
Provides: ${python3:Provides}, ${python3-ply:Provides}
Breaks: ${python3:Breaks}
Suggests: python-ply-doc, python3-pkg-resources
Description: Lex and Yacc implementation for Python3
 PLY   is   yet  another   implementation   of   lex   and  yacc   for
 Python.  Although  several  other  parsing tools  are  available  for
 Python, there are  several reasons why you might want  to take a look
 at PLY:
  * It's implemented entirely in Python.
  * It uses  LR-parsing which is reasonably efficient  and well suited
    for larger grammars.
  * PLY  provides most  of  the standard  lex/yacc features  including
    support for  empty productions, precedence  rules, error recovery,
    and support for ambiguous grammars.
  * PLY is  extremely easy  to use and  provides very  extensive error
    checking.

Package: python-ply-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}
Description: Lex and Yacc implementation for Python (documentation)
 PLY   is   yet  another   implementation   of   lex   and  yacc   for
 Python.
 .
 This package contains the documentation for Ply.
